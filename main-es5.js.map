{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","meOn","platform","icon","url","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport {\n  faEtsy,\n  faGithub,\n  faInstagram,\n  faLinkedin,\n  faTwitter,\n  faXing,\n  IconDefinition,\n} from '@fortawesome/free-brands-svg-icons';\nimport { faDice } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  meOn: MeOn[] = [\n    {\n      platform: 'Xing',\n      icon: faXing,\n      url: 'https://www.xing.com/profile/Daniel_Weiss48/cv',\n    },\n    {\n      platform: 'LinkedIn',\n      icon: faLinkedin,\n      url: 'https://www.linkedin.com/in/wanieldeiss/',\n    },\n    {\n      platform: 'GitHub',\n      icon: faGithub,\n      url: 'https://github.com/WanielDeiss',\n    },\n    {\n      platform: 'BoardGameGeek',\n      icon: faDice,\n      url: 'https://boardgamegeek.com/user/WanielDeiss',\n    },\n    {\n      platform: 'Instagram',\n      icon: faInstagram,\n      url: 'https://www.instagram.com/wanieldeiss/',\n    },\n    {\n      platform: 'Etsy',\n      icon: faEtsy,\n      url: 'https://www.etsy.com/de/shop/DanielDice',\n    },\n    {\n      platform: 'Twitter',\n      icon: faTwitter,\n      url: 'https://twitter.com/WanielDeiss',\n    },\n  ];\n}\n\ninterface MeOn {\n  platform: string;\n  icon: IconDefinition;\n  url: string;\n}\n","<main>\n  <header>\n    <img src=\"/assets/sircode-text-white.svg\" />\n  </header>\n  <section>\n    <div *ngFor=\"let on of meOn\" class=\"on\">\n      <a [href]=\"on.url\" [class]=\"on.platform.toLowerCase()\">\n        <fa-icon [icon]=\"on.icon\"></fa-icon> {{ on.platform }}\n      </a>\n    </div>\n  </section>\n  <section>\n    <p>\n      <b>Imprint</b><br />\n      Daniel L. Weiß<br />\n      Josef-Götz-Str. 16<br />\n      84034 Landshut <br />\n      GERMANY\n    </p>\n  </section>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FontAwesomeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}